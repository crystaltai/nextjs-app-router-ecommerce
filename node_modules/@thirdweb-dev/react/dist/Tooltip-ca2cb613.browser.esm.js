import { r as radius, s as spacing, f as fontSize, h as shadow } from './basic-344e3cc9.browser.esm.js';
import { keyframes } from '@emotion/react';
import styled from '@emotion/styled';
import * as RadixTooltip from '@radix-ui/react-tooltip';
import { jsx, jsxs } from 'react/jsx-runtime';

const ToolTip = props => {
  return /*#__PURE__*/jsx(RadixTooltip.Provider, {
    delayDuration: 200,
    children: /*#__PURE__*/jsxs(RadixTooltip.Root, {
      children: [/*#__PURE__*/jsx(RadixTooltip.Trigger, {
        asChild: true,
        children: props.children
      }), /*#__PURE__*/jsx(RadixTooltip.Portal, {
        children: /*#__PURE__*/jsxs(TooltipContent, {
          sideOffset: props.sideOffset || 6,
          align: props.align,
          side: props.side,
          children: [props.tip, /*#__PURE__*/jsx(TooltipArrow, {})]
        })
      })]
    })
  });
};
const slideUpAndFade = keyframes`
from {
  opacity: 0;
  transform: translateY(2px);
}
to {
  opacity: 1;
  transform: translateY(0);
}
`;
const TooltipContent = styled( RadixTooltip.Content)`
  background: ${p => p.theme.tooltip.bg};
  color: ${p => p.theme.tooltip.text};
  border-radius: ${radius.sm};
  line-height: 1;
  padding: ${spacing.sm} ${spacing.md};
  font-size: ${fontSize.sm};
  box-shadow: ${shadow.sm};
  user-select: none;
  will-change: transform, opacity;
  animation: ${slideUpAndFade} 200ms cubic-bezier(0.16, 1, 0.3, 1);
  z-index: 999999999999999;
  max-width: 300px;
  line-height: 1.5;
`;
const TooltipArrow = styled( RadixTooltip.Arrow)`
  fill: ${p => p.theme.tooltip.bg};
`;

export { ToolTip as T };
