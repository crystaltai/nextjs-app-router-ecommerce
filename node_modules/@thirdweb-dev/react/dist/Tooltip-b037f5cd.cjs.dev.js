'use strict';

var basic = require('./basic-422fe784.cjs.dev.js');
var react = require('@emotion/react');
var styled = require('@emotion/styled');
var RadixTooltip = require('@radix-ui/react-tooltip');
var jsxRuntime = require('react/jsx-runtime');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var styled__default = /*#__PURE__*/_interopDefault(styled);
var RadixTooltip__namespace = /*#__PURE__*/_interopNamespace(RadixTooltip);

const ToolTip = props => {
  return /*#__PURE__*/jsxRuntime.jsx(RadixTooltip__namespace.Provider, {
    delayDuration: 200,
    children: /*#__PURE__*/jsxRuntime.jsxs(RadixTooltip__namespace.Root, {
      children: [/*#__PURE__*/jsxRuntime.jsx(RadixTooltip__namespace.Trigger, {
        asChild: true,
        children: props.children
      }), /*#__PURE__*/jsxRuntime.jsx(RadixTooltip__namespace.Portal, {
        children: /*#__PURE__*/jsxRuntime.jsxs(TooltipContent, {
          sideOffset: props.sideOffset || 6,
          align: props.align,
          side: props.side,
          children: [props.tip, /*#__PURE__*/jsxRuntime.jsx(TooltipArrow, {})]
        })
      })]
    })
  });
};
const slideUpAndFade = react.keyframes`
from {
  opacity: 0;
  transform: translateY(2px);
}
to {
  opacity: 1;
  transform: translateY(0);
}
`;
const TooltipContent = styled__default["default"]( RadixTooltip__namespace.Content)`
  background: ${p => p.theme.tooltip.bg};
  color: ${p => p.theme.tooltip.text};
  border-radius: ${basic.radius.sm};
  line-height: 1;
  padding: ${basic.spacing.sm} ${basic.spacing.md};
  font-size: ${basic.fontSize.sm};
  box-shadow: ${basic.shadow.sm};
  user-select: none;
  will-change: transform, opacity;
  animation: ${slideUpAndFade} 200ms cubic-bezier(0.16, 1, 0.3, 1);
  z-index: 999999999999999;
  max-width: 300px;
  line-height: 1.5;
`;
const TooltipArrow = styled__default["default"]( RadixTooltip__namespace.Arrow)`
  fill: ${p => p.theme.tooltip.bg};
`;

exports.ToolTip = ToolTip;
